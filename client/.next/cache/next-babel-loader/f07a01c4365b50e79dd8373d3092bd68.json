{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/inspire/NodeJS Microserices/ticketing/client/pages/auth/signin.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport useRequest from '../../hooks/use-request';\nimport ImageUploader from 'react-images-upload';\nexport default _s(function () {\n  _s();\n\n  var _useState = useState(''),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(''),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useRequest = useRequest({\n    url: '/api/users/signin',\n    method: 'post',\n    body: {\n      email: email,\n      password: password\n    },\n    onSuccess: function onSuccess() {\n      return Router.push('/');\n    }\n  }),\n      doRequest = _useRequest.doRequest,\n      errors = _useRequest.errors;\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              _context.next = 3;\n              return doRequest();\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var onDrop = picture = {};\n  return __jsx(\"form\", {\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Sign In\"), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Email Address\"), __jsx(\"input\", {\n    value: email,\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    className: \"form-control\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    value: password,\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    type: \"password\",\n    className: \"form-control\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), errors, __jsx(\"button\", {\n    className: \"btn btn-primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Sign In\"), __jsx(ImageUploader, {\n    withIcon: true,\n    buttonText: \"Choose images\",\n    onChange: _this.onDrop,\n    imgExtension: ['.jpg', '.gif', '.png', '.gif'],\n    maxFileSize: 5242880,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n}, \"l2hv9CPiqgZ1i2kLqBiK9ihe7uM=\", false, function () {\n  return [useRequest];\n});","map":{"version":3,"sources":["/Users/inspire/NodeJS Microserices/ticketing/client/pages/auth/signin.js"],"names":["useState","useEffect","Router","useRequest","ImageUploader","email","setEmail","password","setPassword","url","method","body","onSuccess","push","doRequest","errors","onSubmit","event","preventDefault","onDrop","picture","e","target","value"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,kBAAe,YAAM;AAAA;;AAAA,kBACOJ,QAAQ,CAAC,EAAD,CADf;AAAA,MACZK,KADY;AAAA,MACLC,QADK;;AAAA,mBAEaN,QAAQ,CAAC,EAAD,CAFrB;AAAA,MAEZO,QAFY;AAAA,MAEFC,WAFE;;AAAA,oBAGWL,UAAU,CAAC;AACvCM,IAAAA,GAAG,EAAE,mBADkC;AAEvCC,IAAAA,MAAM,EAAE,MAF+B;AAGvCC,IAAAA,IAAI,EAAE;AACJN,MAAAA,KAAK,EAALA,KADI;AAEJE,MAAAA,QAAQ,EAARA;AAFI,KAHiC;AAOvCK,IAAAA,SAAS,EAAE;AAAA,aAAMV,MAAM,CAACW,IAAP,CAAY,GAAZ,CAAN;AAAA;AAP4B,GAAD,CAHrB;AAAA,MAGXC,SAHW,eAGXA,SAHW;AAAA,MAGAC,MAHA,eAGAA,MAHA;;AAanB,MAAMC,QAAQ;AAAA,wEAAG,iBAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AACfA,cAAAA,KAAK,CAACC,cAAN;AADe;AAAA,qBAGTJ,SAAS,EAHA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARE,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAMA,MAAMG,MAAM,GAAGC,OAAO,GAAC,EAAvB;AAIA,SACE;AAAM,IAAA,QAAQ,EAAEJ,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AACE,IAAA,KAAK,EAAEX,KADT;AAEE,IAAA,QAAQ,EAAE,kBAAAgB,CAAC;AAAA,aAAIf,QAAQ,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AAAA,KAFb;AAGE,IAAA,SAAS,EAAC,cAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,EAUE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AACE,IAAA,KAAK,EAAEhB,QADT;AAEE,IAAA,QAAQ,EAAE,kBAAAc,CAAC;AAAA,aAAIb,WAAW,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AAAA,KAFb;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,SAAS,EAAC,cAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAVF,EAmBGR,MAnBH,EAoBE;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eApBF,EAsBE,MAAC,aAAD;AACU,IAAA,QAAQ,EAAE,IADpB;AAEU,IAAA,UAAU,EAAC,eAFrB;AAGU,IAAA,QAAQ,EAAE,KAAI,CAACI,MAHzB;AAIU,IAAA,YAAY,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,CAJxB;AAKU,IAAA,WAAW,EAAE,OALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBF,CADF;AAgCD,CAvDD;AAAA,UAGgChB,UAHhC;AAAA","sourcesContent":["import { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport useRequest from '../../hooks/use-request';\nimport ImageUploader from 'react-images-upload';\nexport default () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const { doRequest, errors } = useRequest({\n    url: '/api/users/signin',\n    method: 'post',\n    body: {\n      email,\n      password\n    },\n    onSuccess: () => Router.push('/')\n  });\n\n  const onSubmit = async event => {\n    event.preventDefault();\n\n    await doRequest();\n  };\n\n  const onDrop = picture={\n\n  }\n\n  return (\n    <form onSubmit={onSubmit}>\n      <h1>Sign In</h1>\n      <div className=\"form-group\">\n        <label>Email Address</label>\n        <input\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n          className=\"form-control\"\n        />\n      </div>\n      <div className=\"form-group\">\n        <label>Password</label>\n        <input\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n          type=\"password\"\n          className=\"form-control\"\n        />\n      </div>\n      {errors}\n      <button className=\"btn btn-primary\">Sign In</button>\n\n      <ImageUploader\n                withIcon={true}\n                buttonText='Choose images'\n                onChange={this.onDrop}\n                imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                maxFileSize={5242880}\n            />\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}